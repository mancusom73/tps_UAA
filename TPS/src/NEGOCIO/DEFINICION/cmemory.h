#ifndef CMEMORY_H
#define CMEMORY_H
void COPY_STRUCT_TO_BUFFER( char *buffer, int origen );
void COPY_BUFFER_TO_STRUCT( char *buffer, int destino );
void _COPY_BUFFER_TO_STRUCT( char *buffer, int destino, int subindice );
int SIZEOF_ARRAY( int var );
int SIZEOF_STRUCT( int cod );
int _SIZEOF_STRUCT( int cod );
//   void      _( char *buffer, int origen, int subindice );
void CEREAR_STRUCT( int cod );
void CEREAR_ARRAY( int cod );
void COPY_STRUCT( int destino, int origen );

void _LOAD_MEMORY( int var, int subindice, char *valor );
char _GET_MEMORY_STR_CHAR( int var, int subindice, int elemento );
void _SET_MEMORY( int var, int subindice, char *valor );
void _CEREAR_MEMORY( int var, int subindice );
char GET_MEMORY_STR_CHAR( int var, int elemento );
char *GET_MEMORY_STR( int var );
char *_GET_MEMORY_STR( int var, int subindice );
void _COPY_MEMORY( int destino, int sub_des, int origen, int sub_ori );
int SIZEOF_VAR( int var );
int SIZEOF_ARRAY( int var );
void SET_MEMORY( int var, char *valor );
void CEREAR_MEMORY( int var );
void COPY_MEMORY( int destino, int origen );
void CEREAR_ARRAY( int cod );
void SET_MEMORY_STR_CHAR( int var, int elemento, char valor );
void _SET_MEMORY_STR_CHAR( int var, int subindice, int elemento, char valor );
void SET_MEMORY_CHAR( int var, int valor );
void _SET_MEMORY_CHAR( int var, int subindice, int valor );
void SET_MEMORY_INT( int var, int valor );
void _SET_MEMORY_INT( int var, int subindice, int valor );
void SET_MEMORY_LONG( int var, long valor );
void _SET_MEMORY_LONG( int var, int subindice, long valor );
void SET_MEMORY_FLOAT( int var, double valor );
void _SET_MEMORY_FLOAT( int var, int subindice, double valor );
void SET_MEMORY_DOUBLE( int var, double valor );
void _SET_MEMORY_DOUBLE( int var, int subindice, double valor );
char GET_MEMORY_CHAR( int var );
char _GET_MEMORY_CHAR( int var, int subindice );
unsigned char GET_MEMORY_UCHAR( int var );
unsigned char _GET_MEMORY_UCHAR( int var, int subindice );
int GET_MEMORY_INT( int var );
int _GET_MEMORY_INT( int var, int subindice );
unsigned GET_MEMORY_UNSIGNED( int var );
unsigned _GET_MEMORY_UNSIGNED( int var, int subindice );
long GET_MEMORY_LONG( int var );
long _GET_MEMORY_LONG( int var, int subindice );
unsigned long GET_MEMORY_ULONG( int var );
unsigned long _GET_MEMORY_ULONG( int var, int subindice );
float GET_MEMORY_FLOAT( int var );
float _GET_MEMORY_FLOAT( int var, int subindice );
double GET_MEMORY_DOUBLE( int var );
double _GET_MEMORY_DOUBLE( int var, int subindice );
void ADD_MEMORY_CHAR( int var, char valor );
void _ADD_MEMORY_CHAR( int var, int subindice, char valor );
void ADD_MEMORY_UCHAR( int var, unsigned char valor );
void _ADD_MEMORY_UCHAR( int var, int subindice, unsigned char valor );
void ADD_MEMORY_INT( int var, int valor );
void _ADD_MEMORY_INT( int var, int subindice, int valor );
void ADD_MEMORY_UINT( int var, unsigned int valor );
void _ADD_MEMORY_UINT( int var, int subindice, unsigned int valor );
void ADD_MEMORY_LONG( int var, long valor );
void _ADD_MEMORY_LONG( int var, int subindice, long valor );
void ADD_MEMORY_ULONG( int var, unsigned long valor );
void _ADD_MEMORY_ULONG( int var, int subindice, unsigned long valor );
void ADD_MEMORY_FLOAT( int var, float valor );
void _ADD_MEMORY_FLOAT( int var, int subindice, float valor );
void ADD_MEMORY_DOUBLE( int var, double valor );
void _ADD_MEMORY_DOUBLE( int var, int subindice, double valor );
int _APUNTAR_STRUCT( int cod );
int SIZEOF_STRUCT( int cod );
int _SIZEOF_STRUCT( int cod );
void ADD_BUFFER_TO_BUFFER( char *origen, char *destino, int estructura );
void _ADD_BUFFER_TO_BUFFER( char *origen, char *destino, int tipo );
int _APUNTAR_STRUCT_VERIFICANDO( int cod );
void ADD_BUFFER_TO_STRUCT( char *origen, int destino );
void _ADD_BUFFER_TO_STRUCT( char *origen, int var, int sub, int tipo );
void _COPY_STRUCT_TO_BUFFER( char *buffer, int origen, int subindice );
#endif
